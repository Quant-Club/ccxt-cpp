{
  "id": "coinsph",
  "name": "Coins.ph",
  "countries": [
    "PH"
  ],
  "enableRateLimit": true,
  "rateLimit": 50,
  "timeout": 10000,
  "certified": false,
  "pro": false,
  "alias": false,
  "dex": false,
  "has": {
    "publicAPI": true,
    "privateAPI": true,
    "CORS": null,
    "sandbox": null,
    "spot": true,
    "margin": false,
    "swap": false,
    "future": false,
    "option": false,
    "addMargin": false,
    "borrowCrossMargin": null,
    "borrowIsolatedMargin": null,
    "borrowMargin": null,
    "cancelAllOrders": true,
    "cancelAllOrdersWs": null,
    "cancelOrder": true,
    "cancelOrderWs": null,
    "cancelOrders": false,
    "cancelOrdersWs": null,
    "closeAllPositions": false,
    "closePosition": false,
    "createDepositAddress": false,
    "createLimitBuyOrder": null,
    "createLimitBuyOrderWs": null,
    "createLimitOrder": true,
    "createLimitOrderWs": null,
    "createLimitSellOrder": null,
    "createLimitSellOrderWs": null,
    "createMarketBuyOrder": null,
    "createMarketBuyOrderWs": null,
    "createMarketBuyOrderWithCost": true,
    "createMarketBuyOrderWithCostWs": null,
    "createMarketOrder": true,
    "createMarketOrderWs": true,
    "createMarketOrderWithCost": false,
    "createMarketOrderWithCostWs": null,
    "createMarketSellOrder": null,
    "createMarketSellOrderWs": null,
    "createMarketSellOrderWithCost": false,
    "createMarketSellOrderWithCostWs": null,
    "createOrder": true,
    "createOrderWs": null,
    "createOrders": null,
    "createOrderWithTakeProfitAndStopLoss": null,
    "createOrderWithTakeProfitAndStopLossWs": null,
    "createPostOnlyOrder": false,
    "createPostOnlyOrderWs": null,
    "createReduceOnlyOrder": false,
    "createReduceOnlyOrderWs": null,
    "createStopLimitOrder": true,
    "createStopLimitOrderWs": null,
    "createStopLossOrder": null,
    "createStopLossOrderWs": null,
    "createStopMarketOrder": true,
    "createStopMarketOrderWs": null,
    "createStopOrder": true,
    "createStopOrderWs": null,
    "createTakeProfitOrder": null,
    "createTakeProfitOrderWs": null,
    "createTrailingAmountOrder": null,
    "createTrailingAmountOrderWs": null,
    "createTrailingPercentOrder": null,
    "createTrailingPercentOrderWs": null,
    "createTriggerOrder": null,
    "createTriggerOrderWs": null,
    "deposit": true,
    "editOrder": false,
    "editOrderWs": null,
    "fetchAccounts": false,
    "fetchBalance": true,
    "fetchBalanceWs": null,
    "fetchBidsAsks": false,
    "fetchBorrowInterest": false,
    "fetchBorrowRate": null,
    "fetchBorrowRateHistories": false,
    "fetchBorrowRateHistory": false,
    "fetchBorrowRates": null,
    "fetchBorrowRatesPerSymbol": null,
    "fetchCanceledAndClosedOrders": null,
    "fetchCanceledOrders": false,
    "fetchClosedOrder": false,
    "fetchClosedOrders": true,
    "fetchClosedOrdersWs": null,
    "fetchConvertCurrencies": null,
    "fetchConvertQuote": null,
    "fetchConvertTrade": null,
    "fetchConvertTradeHistory": null,
    "fetchCrossBorrowRate": false,
    "fetchCrossBorrowRates": false,
    "fetchCurrencies": false,
    "fetchCurrenciesWs": "emulated",
    "fetchDeposit": null,
    "fetchDepositAddress": true,
    "fetchDepositAddresses": false,
    "fetchDepositAddressesByNetwork": false,
    "fetchDeposits": true,
    "fetchDepositsWithdrawals": null,
    "fetchDepositsWs": null,
    "fetchDepositWithdrawFee": false,
    "fetchDepositWithdrawFees": false,
    "fetchFundingHistory": false,
    "fetchFundingRate": false,
    "fetchFundingRateHistory": false,
    "fetchFundingInterval": null,
    "fetchFundingIntervals": null,
    "fetchFundingRates": false,
    "fetchGreeks": null,
    "fetchIndexOHLCV": false,
    "fetchIsolatedBorrowRate": false,
    "fetchIsolatedBorrowRates": false,
    "fetchMarginAdjustmentHistory": null,
    "fetchIsolatedPositions": null,
    "fetchL2OrderBook": true,
    "fetchL3OrderBook": false,
    "fetchLastPrices": null,
    "fetchLedger": false,
    "fetchLedgerEntry": null,
    "fetchLeverage": false,
    "fetchLeverages": null,
    "fetchLeverageTiers": false,
    "fetchLiquidations": null,
    "fetchMarginMode": null,
    "fetchMarginModes": null,
    "fetchMarketLeverageTiers": false,
    "fetchMarkets": true,
    "fetchMarketsWs": null,
    "fetchMarkOHLCV": false,
    "fetchMyLiquidations": null,
    "fetchMySettlementHistory": null,
    "fetchMyTrades": true,
    "fetchMyTradesWs": null,
    "fetchOHLCV": true,
    "fetchOHLCVWs": null,
    "fetchOpenInterest": null,
    "fetchOpenInterestHistory": false,
    "fetchOpenOrder": null,
    "fetchOpenOrders": true,
    "fetchOpenOrdersWs": null,
    "fetchOption": null,
    "fetchOptionChain": null,
    "fetchOrder": true,
    "fetchOrderBook": true,
    "fetchOrderBooks": false,
    "fetchOrderBookWs": null,
    "fetchOrders": false,
    "fetchOrdersByStatus": null,
    "fetchOrdersWs": null,
    "fetchOrderTrades": true,
    "fetchOrderWs": null,
    "fetchPosition": false,
    "fetchPositionHistory": false,
    "fetchPositionsHistory": false,
    "fetchPositionWs": null,
    "fetchPositionMode": false,
    "fetchPositions": false,
    "fetchPositionsWs": null,
    "fetchPositionsForSymbol": false,
    "fetchPositionsForSymbolWs": null,
    "fetchPositionsRisk": false,
    "fetchPremiumIndexOHLCV": false,
    "fetchSettlementHistory": null,
    "fetchStatus": true,
    "fetchTicker": true,
    "fetchTickerWs": null,
    "fetchTickers": true,
    "fetchMarkPrices": null,
    "fetchTickersWs": null,
    "fetchTime": true,
    "fetchTrades": true,
    "fetchTradesWs": null,
    "fetchTradingFee": true,
    "fetchTradingFees": true,
    "fetchTradingFeesWs": null,
    "fetchTradingLimits": false,
    "fetchTransactionFee": false,
    "fetchTransactionFees": false,
    "fetchTransactions": false,
    "fetchTransfer": null,
    "fetchTransfers": false,
    "fetchUnderlyingAssets": null,
    "fetchVolatilityHistory": null,
    "fetchWithdrawAddresses": null,
    "fetchWithdrawal": null,
    "fetchWithdrawals": true,
    "fetchWithdrawalsWs": null,
    "fetchWithdrawalWhitelist": false,
    "reduceMargin": false,
    "repayCrossMargin": false,
    "repayIsolatedMargin": false,
    "setLeverage": false,
    "setMargin": false,
    "setMarginMode": false,
    "setPositionMode": false,
    "signIn": false,
    "transfer": false,
    "watchBalance": null,
    "watchMyTrades": null,
    "watchOHLCV": null,
    "watchOHLCVForSymbols": null,
    "watchOrderBook": null,
    "watchOrderBookForSymbols": null,
    "watchOrders": null,
    "watchOrdersForSymbols": null,
    "watchPosition": null,
    "watchPositions": null,
    "watchStatus": null,
    "watchTicker": null,
    "watchTickers": null,
    "watchTrades": null,
    "watchTradesForSymbols": null,
    "watchLiquidations": null,
    "watchLiquidationsForSymbols": null,
    "watchMyLiquidations": null,
    "watchMyLiquidationsForSymbols": null,
    "withdraw": true,
    "ws": false
  },
  "urls": {
    "logo": "https://user-images.githubusercontent.com/1294454/225719995-48ab2026-4ddb-496c-9da7-0d7566617c9b.jpg",
    "api": {
      "public": "https://api.pro.coins.ph",
      "private": "https://api.pro.coins.ph"
    },
    "www": "https://coins.ph/",
    "doc": [
      "https://coins-docs.github.io/rest-api"
    ],
    "fees": "https://support.coins.ph/hc/en-us/sections/4407198694681-Limits-Fees"
  },
  "api": {
    "public": {
      "get": {
        "openapi/v1/ping": 1,
        "openapi/v1/time": 1,
        "openapi/quote/v1/ticker/24hr": {
          "cost": 1,
          "noSymbolAndNoSymbols": 40,
          "byNumberOfSymbols": [
            [
              101,
              40
            ],
            [
              21,
              20
            ],
            [
              0,
              1
            ]
          ]
        },
        "openapi/quote/v1/ticker/price": {
          "cost": 1,
          "noSymbol": 2
        },
        "openapi/quote/v1/ticker/bookTicker": {
          "cost": 1,
          "noSymbol": 2
        },
        "openapi/v1/exchangeInfo": 10,
        "openapi/quote/v1/depth": {
          "cost": 1,
          "byLimit": [
            [
              101,
              5
            ],
            [
              0,
              1
            ]
          ]
        },
        "openapi/quote/v1/klines": 1,
        "openapi/quote/v1/trades": 1,
        "openapi/v1/pairs": 1,
        "openapi/quote/v1/avgPrice": 1
      }
    },
    "private": {
      "get": {
        "openapi/wallet/v1/config/getall": 10,
        "openapi/wallet/v1/deposit/address": 10,
        "openapi/wallet/v1/deposit/history": 1,
        "openapi/wallet/v1/withdraw/history": 1,
        "openapi/v1/account": 10,
        "openapi/v1/openOrders": {
          "cost": 3,
          "noSymbol": 40
        },
        "openapi/v1/asset/tradeFee": 1,
        "openapi/v1/order": 2,
        "openapi/v1/historyOrders": {
          "cost": 10,
          "noSymbol": 40
        },
        "openapi/v1/myTrades": 10,
        "openapi/v1/capital/deposit/history": 1,
        "openapi/v1/capital/withdraw/history": 1,
        "openapi/v3/payment-request/get-payment-request": 1,
        "merchant-api/v1/get-invoices": 1,
        "openapi/account/v3/crypto-accounts": 1,
        "openapi/transfer/v3/transfers/{id}": 1
      },
      "post": {
        "openapi/wallet/v1/withdraw/apply": 600,
        "openapi/v1/order/test": 1,
        "openapi/v1/order": 1,
        "openapi/v1/capital/withdraw/apply": 1,
        "openapi/v1/capital/deposit/apply": 1,
        "openapi/v3/payment-request/payment-requests": 1,
        "openapi/v3/payment-request/delete-payment-request": 1,
        "openapi/v3/payment-request/payment-request-reminder": 1,
        "openapi/v1/userDataStream": 1,
        "merchant-api/v1/invoices": 1,
        "merchant-api/v1/invoices-cancel": 1,
        "openapi/convert/v1/get-supported-trading-pairs": 1,
        "openapi/convert/v1/get-quote": 1,
        "openapi/convert/v1/accpet-quote": 1,
        "openapi/fiat/v1/support-channel": 1,
        "openapi/fiat/v1/cash-out": 1,
        "openapi/fiat/v1/history": 1,
        "openapi/migration/v4/sellorder": 1,
        "openapi/migration/v4/validate-field": 1,
        "openapi/transfer/v3/transfers": 1
      },
      "delete": {
        "openapi/v1/order": 1,
        "openapi/v1/openOrders": 1,
        "openapi/v1/userDataStream": 1
      }
    }
  },
  "requiredCredentials": {
    "apiKey": true,
    "secret": true,
    "uid": false,
    "accountId": false,
    "login": false,
    "password": false,
    "twofa": false,
    "privateKey": false,
    "walletAddress": false,
    "token": false
  },
  "markets": null,
  "currencies": {},
  "timeframes": {
    "1m": "1m",
    "3m": "3m",
    "5m": "5m",
    "15m": "15m",
    "30m": "30m",
    "1h": "1h",
    "2h": "2h",
    "4h": "4h",
    "6h": "6h",
    "8h": "8h",
    "12h": "12h",
    "1d": "1d",
    "3d": "3d",
    "1w": "1w",
    "1M": "1M"
  },
  "fees": {
    "trading": {
      "tierBased": true,
      "percentage": true,
      "taker": 0.003,
      "maker": 0.0025,
      "feeSide": "get",
      "tiers": {
        "taker": [
          [
            0.0,
            0.003
          ],
          [
            500000.0,
            0.0027
          ],
          [
            1000000.0,
            0.0024
          ],
          [
            2500000.0,
            0.002
          ],
          [
            5000000.0,
            0.0018
          ],
          [
            10000000.0,
            0.0015
          ],
          [
            100000000.0,
            0.0012
          ],
          [
            500000000.0,
            0.0009
          ],
          [
            1000000000.0,
            0.0007
          ],
          [
            2500000000.0,
            0.0005
          ]
        ],
        "maker": [
          [
            0.0,
            0.0025
          ],
          [
            500000.0,
            0.0022
          ],
          [
            1000000.0,
            0.0018
          ],
          [
            2500000.0,
            0.0015
          ],
          [
            5000000.0,
            0.0012
          ],
          [
            10000000.0,
            0.001
          ],
          [
            100000000.0,
            0.0008
          ],
          [
            500000000.0,
            0.0007
          ],
          [
            1000000000.0,
            0.0006
          ],
          [
            2500000000.0,
            0.0005
          ]
        ]
      }
    },
    "funding": {
      "tierBased": null,
      "percentage": null,
      "withdraw": {},
      "deposit": {}
    }
  },
  "status": {
    "status": "ok",
    "updated": null,
    "eta": null,
    "url": null
  },
  "exceptions": {
    "exact": {
      "-1000": "ccxt.base.errors.BadRequest",
      "-1001": "ccxt.base.errors.BadRequest",
      "-1002": "ccxt.base.errors.AuthenticationError",
      "-1003": "ccxt.base.errors.RateLimitExceeded",
      "-1004": "ccxt.base.errors.InvalidOrder",
      "-1006": "ccxt.base.errors.BadResponse",
      "-1007": "ccxt.base.errors.BadResponse",
      "-1014": "ccxt.base.errors.InvalidOrder",
      "-1015": "ccxt.base.errors.RateLimitExceeded",
      "-1016": "ccxt.base.errors.NotSupported",
      "-1020": "ccxt.base.errors.NotSupported",
      "-1021": "ccxt.base.errors.BadRequest",
      "-1022": "ccxt.base.errors.BadRequest",
      "-1023": "ccxt.base.errors.AuthenticationError",
      "-1024": "ccxt.base.errors.BadRequest",
      "-1025": "ccxt.base.errors.BadRequest",
      "-1030": "ccxt.base.errors.ExchangeError",
      "-1100": "ccxt.base.errors.BadRequest",
      "-1101": "ccxt.base.errors.BadRequest",
      "-1102": "ccxt.base.errors.BadRequest",
      "-1103": "ccxt.base.errors.BadRequest",
      "-1104": "ccxt.base.errors.BadRequest",
      "-1105": "ccxt.base.errors.BadRequest",
      "-1106": "ccxt.base.errors.BadRequest",
      "-1111": "ccxt.base.errors.BadRequest",
      "-1112": "ccxt.base.errors.BadResponse",
      "-1114": "ccxt.base.errors.BadRequest",
      "-1115": "ccxt.base.errors.InvalidOrder",
      "-1116": "ccxt.base.errors.InvalidOrder",
      "-1117": "ccxt.base.errors.InvalidOrder",
      "-1118": "ccxt.base.errors.InvalidOrder",
      "-1119": "ccxt.base.errors.InvalidOrder",
      "-1120": "ccxt.base.errors.BadRequest",
      "-1121": "ccxt.base.errors.BadSymbol",
      "-1122": "ccxt.base.errors.InvalidOrder",
      "-1125": "ccxt.base.errors.BadRequest",
      "-1127": "ccxt.base.errors.BadRequest",
      "-1128": "ccxt.base.errors.BadRequest",
      "-1130": "ccxt.base.errors.BadRequest",
      "-1131": "ccxt.base.errors.InsufficientFunds",
      "-1132": "ccxt.base.errors.InvalidOrder",
      "-1133": "ccxt.base.errors.InvalidOrder",
      "-1134": "ccxt.base.errors.InvalidOrder",
      "-1135": "ccxt.base.errors.InvalidOrder",
      "-1136": "ccxt.base.errors.InvalidOrder",
      "-1137": "ccxt.base.errors.InvalidOrder",
      "-1138": "ccxt.base.errors.InvalidOrder",
      "-1139": "ccxt.base.errors.InvalidOrder",
      "-1140": "ccxt.base.errors.InvalidOrder",
      "-1141": "ccxt.base.errors.DuplicateOrderId",
      "-1142": "ccxt.base.errors.InvalidOrder",
      "-1143": "ccxt.base.errors.OrderNotFound",
      "-1144": "ccxt.base.errors.InvalidOrder",
      "-1145": "ccxt.base.errors.InvalidOrder",
      "-1146": "ccxt.base.errors.InvalidOrder",
      "-1147": "ccxt.base.errors.InvalidOrder",
      "-1148": "ccxt.base.errors.InvalidOrder",
      "-1149": "ccxt.base.errors.InvalidOrder",
      "-1150": "ccxt.base.errors.InvalidOrder",
      "-1151": "ccxt.base.errors.BadSymbol",
      "-1152": "ccxt.base.errors.NotSupported",
      "-1153": "ccxt.base.errors.AuthenticationError",
      "-1154": "ccxt.base.errors.BadRequest",
      "-1155": "ccxt.base.errors.BadRequest",
      "-1156": "ccxt.base.errors.InvalidOrder",
      "-1157": "ccxt.base.errors.BadSymbol",
      "-1158": "ccxt.base.errors.InvalidOrder",
      "-1159": "ccxt.base.errors.InvalidOrder",
      "-1160": "ccxt.base.errors.BadRequest",
      "-1161": "ccxt.base.errors.BadRequest",
      "-2010": "ccxt.base.errors.InvalidOrder",
      "-2013": "ccxt.base.errors.OrderNotFound",
      "-2011": "ccxt.base.errors.BadRequest",
      "-2014": "ccxt.base.errors.BadRequest",
      "-2015": "ccxt.base.errors.AuthenticationError",
      "-2016": "ccxt.base.errors.BadResponse",
      "-3126": "ccxt.base.errors.InvalidOrder",
      "-3127": "ccxt.base.errors.InvalidOrder",
      "-4001": "ccxt.base.errors.BadRequest",
      "-100011": "ccxt.base.errors.BadSymbol",
      "-100012": "ccxt.base.errors.BadSymbol",
      "-30008": "ccxt.base.errors.InsufficientFunds",
      "-30036": "ccxt.base.errors.InsufficientFunds",
      "403": "ccxt.base.errors.ExchangeNotAvailable"
    },
    "broad": {
      "Unknown order sent": "ccxt.base.errors.OrderNotFound",
      "Duplicate order sent": "ccxt.base.errors.DuplicateOrderId",
      "Market is closed": "ccxt.base.errors.BadSymbol",
      "Account has insufficient balance for requested action": "ccxt.base.errors.InsufficientFunds",
      "Market orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Iceberg orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Stop loss orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Stop loss limit orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Take profit orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Take profit limit orders are not supported for self symbol": "ccxt.base.errors.BadSymbol",
      "Price* QTY is zero or less": "ccxt.base.errors.BadRequest",
      "IcebergQty exceeds QTY": "ccxt.base.errors.BadRequest",
      "This action disabled is on self account": "ccxt.base.errors.PermissionDenied",
      "Unsupported order combination": "ccxt.base.errors.InvalidOrder",
      "Order would trigger immediately": "ccxt.base.errors.InvalidOrder",
      "Cancel order is invalid. Check origClOrdId and orderId": "ccxt.base.errors.InvalidOrder",
      "Order would immediately match and take": "ccxt.base.errors.OrderImmediatelyFillable",
      "PRICE_FILTER": "ccxt.base.errors.InvalidOrder",
      "LOT_SIZE": "ccxt.base.errors.InvalidOrder",
      "MIN_NOTIONAL": "ccxt.base.errors.InvalidOrder",
      "MAX_NUM_ORDERS": "ccxt.base.errors.InvalidOrder",
      "MAX_ALGO_ORDERS": "ccxt.base.errors.InvalidOrder",
      "BROKER_MAX_NUM_ORDERS": "ccxt.base.errors.InvalidOrder",
      "BROKER_MAX_ALGO_ORDERS": "ccxt.base.errors.InvalidOrder",
      "ICEBERG_PARTS": "ccxt.base.errors.BadRequest"
    }
  },
  "httpExceptions": {
    "422": "ccxt.base.errors.ExchangeError",
    "418": "ccxt.base.errors.DDoSProtection",
    "429": "ccxt.base.errors.RateLimitExceeded",
    "404": "ccxt.base.errors.ExchangeNotAvailable",
    "409": "ccxt.base.errors.ExchangeNotAvailable",
    "410": "ccxt.base.errors.ExchangeNotAvailable",
    "451": "ccxt.base.errors.ExchangeNotAvailable",
    "500": "ccxt.base.errors.ExchangeNotAvailable",
    "501": "ccxt.base.errors.ExchangeNotAvailable",
    "502": "ccxt.base.errors.ExchangeNotAvailable",
    "520": "ccxt.base.errors.ExchangeNotAvailable",
    "521": "ccxt.base.errors.ExchangeNotAvailable",
    "522": "ccxt.base.errors.ExchangeNotAvailable",
    "525": "ccxt.base.errors.ExchangeNotAvailable",
    "526": "ccxt.base.errors.ExchangeNotAvailable",
    "400": "ccxt.base.errors.ExchangeNotAvailable",
    "403": "ccxt.base.errors.ExchangeNotAvailable",
    "405": "ccxt.base.errors.ExchangeNotAvailable",
    "503": "ccxt.base.errors.ExchangeNotAvailable",
    "530": "ccxt.base.errors.ExchangeNotAvailable",
    "408": "ccxt.base.errors.RequestTimeout",
    "504": "ccxt.base.errors.RequestTimeout",
    "401": "ccxt.base.errors.AuthenticationError",
    "407": "ccxt.base.errors.AuthenticationError",
    "511": "ccxt.base.errors.AuthenticationError"
  },
  "commonCurrencies": {
    "XBT": "BTC",
    "BCC": "BCH",
    "BCHSV": "BSV"
  },
  "precisionMode": 4,
  "paddingMode": 5,
  "limits": {
    "leverage": {
      "min": null,
      "max": null
    },
    "amount": {
      "min": null,
      "max": null
    },
    "price": {
      "min": null,
      "max": null
    },
    "cost": {
      "min": null,
      "max": null
    }
  },
  "version": "v1",
  "options": {
    "createMarketBuyOrderRequiresPrice": true,
    "withdraw": {
      "warning": false
    },
    "deposit": {
      "warning": false
    },
    "createOrder": {
      "timeInForce": "GTC",
      "newOrderRespType": {
        "market": "FULL",
        "limit": "FULL"
      }
    },
    "fetchTicker": {
      "method": "publicGetOpenapiQuoteV1Ticker24hr"
    },
    "fetchTickers": {
      "method": "publicGetOpenapiQuoteV1Ticker24hr"
    },
    "networks": {
      "TRC20": "TRX",
      "ERC20": "ETH",
      "BEP20": "BSC",
      "ARB": "ARBITRUM"
    }
  }
}